---
AWSTemplateFormatVersion: '2010-09-09'

Description: Lambda function 

Parameters:

  AccountId:
    Type: String
    Default: '106465311501'
    Description: AWS Account ID
    
  Msg:
    Type: String
    Default: 'Hello from APIGateway and Lambda!'
    Description: Message
    
  ApiName:
    Type: String
    Default: 'TestAPI'
    Description: API name

Resources:

  LambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.9
      Role: !GetAtt LambdaRole.Arn
      Handler: index.handler
      Code:
        ZipFile: !Sub |
          import json

          def lambda_handler(event, context):

              return {
                  "statusCode": 200,
                  "isBase64Encoded": False,
                  "body": json.dumps('${Msg}')
              }
      Description: Invoke a function during stack creation.
      TracingConfig:
        Mode: Active

  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties: 
      Name: !Ref ApiName
      Description: API Name
      
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub 'arn:aws:execute-api:ap-southeast-2:${AccountId}:${ApiName}/*'
      
  RestApiStage:
    Type: AWS::ApiGateway::Stage
    DependsOn: ApiGatewayAccount
    Properties:
      StageName: default
      Description: Default Stage
      RestApiId: !Ref RestApi
      DeploymentId: !Ref DeploymentId
      Variables:
        Stack: Prod
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
          MetricsEnabled: 'false'
          DataTraceEnabled: 'false'

  ApiGatewayCloudWatchLogsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: "ApiGatewayLogsPolicy"
          PolicyDocument:
            Version": "2012-10-17"
            Statement":
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                  - logs:GetLogEvents
                  - logs:FilterLogEvents
            Resource: "*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        
  ApiGatewayAccount:
    Type: "AWS::ApiGateway::Account"
    Properties:
      CloudWatchRoleArn: !GetAtt ApiGatewayCloudWatchLogsRole.Arn

  ApiDeployment:
    Type: "AWS::ApiGateway::Deployment"
    DependsOn": GreetingRequest
    Properties:
      RestApiId: !Ref RestApi"
      StageName: "DummyStage"

  ApiResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: "test"

  ApiRequest:
    DependsOn: LambdaPermission
    Type": "AWS::ApiGateway::Method"
    Properties:
      AuthorizationType: "NONE"
      HttpMethod": "GET"
      Integration:
        Type: "AWS"
        IntegrationHttpMethod: "POST"
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref AWS::Region
            - ':lambda:path/2015-03-31/functions/'
            - !GetAtt LambdaFunction.Arn
            - '/invocations'
        IntegrationResponses:
          StatusCode: 200
        RequestTemplates:
        - "application/json": !Join
            - ''
            - - "{"
              - "\"name\": \"$input.params('name')\""
              - "}"
      RequestParameters:
      - "method.request.querystring.name": false
      ResourceId": !Ref ApiResource
      RestApiId": !Ref RestApi
      MethodResponses:
        - StatusCode: 200
